import React, { useState } from "react";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";
import styles from "../../styles/Auth.module.css";
import authImg from "../../assets/auth_bg.png";
import Headers from "../layout/Header";

function Signup() {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    password: "",
    confirmPassword: "",
  });
  const [loading, setLoading] = useState(false);
  const [errors, setErrors] = useState({});
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);

  const navigate = useNavigate();

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
    setErrors((prev) => ({ ...prev, [name]: "" }));
  };

  const validateForm = () => {
    const newErrors = {};

    if (!formData.firstName.trim()) {
      newErrors.firstName = "First name is required";
    } else if (formData.firstName.length < 2) {
      newErrors.firstName = "First name must be at least 2 characters";
    }

    if (!formData.lastName.trim()) {
      newErrors.lastName = "Last name is required";
    } else if (formData.lastName.length < 2) {
      newErrors.lastName = "Last name must be at least 2 characters";
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!formData.email) {
      newErrors.email = "Email is required";
    } else if (!emailRegex.test(formData.email)) {
      newErrors.email = "Invalid email format";
    }

    const passwordRegex =
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    if (!formData.password) {
      newErrors.password = "Password is required";
    } else if (!passwordRegex.test(formData.password)) {
      newErrors.password =
        "Password must be at least 8 characters, include an uppercase letter, lowercase letter, number, and special character";
    }

    if (!formData.confirmPassword) {
      newErrors.confirmPassword = "Confirm password is required";
    } else if (formData.password !== formData.confirmPassword) {
      newErrors.confirmPassword = "Passwords do not match";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!validateForm()) {
      return;
    }

    setLoading(true);

    try {
      const response = await axios.post(
        `${import.meta.env.VITE_API_URL}api/auth/signup`,
        formData
      );
      if (response.data.success) {
        navigate("/login");
      } else {
        setErrors({ server: response.data.message });
      }
    } catch (err) {
      console.log(err.response?.data?.message);
      setErrors({ server: err.response?.data?.message || "An error occurred" });
    } finally {
      setLoading(false);
    }
  };

  const togglePasswordVisibility = () => setShowPassword((prev) => !prev);
  const toggleConfirmPasswordVisibility = () =>
    setShowConfirmPassword((prev) => !prev);

  return (
    <div className={styles.container}>
      <div className={styles.headerComponent}>
        <svg
          width="649"
          height="1333"
          viewBox="0 0 649 1333"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M23.9063 3.43749C21.5391 3.43632 19.2319 4.18186 17.313 5.56798C15.3942 6.9541 13.9614 8.91018 13.2188 11.1578C13.1663 11.3395 13.0778 11.5088 12.9584 11.6556C12.8391 11.8023 12.6913 11.9234 12.5241 12.0117C12.3568 12.1 12.1734 12.1537 11.9849 12.1695C11.7965 12.1853 11.6067 12.1629 11.4271 12.1036C11.2475 12.0444 11.0816 11.9495 10.9395 11.8247C10.7974 11.6999 10.6819 11.5476 10.6 11.3772C10.5181 11.2067 10.4714 11.0214 10.4628 10.8325C10.4541 10.6435 10.4837 10.4547 10.5497 10.2775C11.5259 7.32943 13.4502 4.78724 16.0225 3.04728C18.5947 1.30732 21.6704 0.467377 24.77 0.658413C27.8697 0.84945 30.8189 2.06073 33.1581 4.10339C35.4972 6.14606 37.0947 8.9053 37.7016 11.9509C39.8229 12.2375 41.7561 13.3196 43.1094 14.9781C44.4628 16.6366 45.1351 18.7476 44.9903 20.8833C44.8455 23.019 43.8943 25.0198 42.3295 26.4805C40.7647 27.9411 38.7031 28.7524 36.5625 28.75H12.6563C12.2833 28.75 11.9256 28.6018 11.6619 28.3381C11.3982 28.0744 11.25 27.7167 11.25 27.3437C11.25 26.9708 11.3982 26.6131 11.6619 26.3494C11.9256 26.0856 12.2833 25.9375 12.6563 25.9375H36.5625C38.0543 25.9379 39.4852 25.3456 40.5404 24.2909C41.5955 23.2363 42.1885 21.8057 42.1889 20.3139C42.1893 18.822 41.597 17.3912 40.5424 16.336C39.4878 15.2808 38.0572 14.6879 36.5653 14.6875H36.4922C36.1445 14.6896 35.8084 14.5629 35.5487 14.3317C35.2891 14.1006 35.1242 13.7815 35.0859 13.4359C34.7781 10.6862 33.4678 8.14636 31.4054 6.30187C29.343 4.45738 26.6731 3.43761 23.9063 3.43749ZM0 16.0937C0 15.7208 0.148158 15.3631 0.411881 15.0994C0.675604 14.8356 1.03329 14.6875 1.40625 14.6875H15.4688C15.8417 14.6875 16.1994 14.8356 16.4631 15.0994C16.7268 15.3631 16.875 15.7208 16.875 16.0937C16.875 16.4667 16.7268 16.8244 16.4631 17.0881C16.1994 17.3518 15.8417 17.5 15.4688 17.5H1.40625C1.03329 17.5 0.675604 17.3518 0.411881 17.0881C0.148158 16.8244 0 16.4667 0 16.0937ZM5.625 21.7187C5.625 21.3458 5.77316 20.9881 6.03688 20.7244C6.3006 20.4606 6.65829 20.3125 7.03125 20.3125H32.3438C32.7167 20.3125 33.0744 20.4606 33.3381 20.7244C33.6018 20.9881 33.75 21.3458 33.75 21.7187C33.75 22.0917 33.6018 22.4494 33.3381 22.7131C33.0744 22.9768 32.7167 23.125 32.3438 23.125H7.03125C6.65829 23.125 6.3006 22.9768 6.03688 22.7131C5.77316 22.4494 5.625 22.0917 5.625 21.7187ZM0 32.9687C0 32.5958 0.148158 32.2381 0.411881 31.9744C0.675604 31.7106 1.03329 31.5625 1.40625 31.5625H26.7188C27.0917 31.5625 27.4494 31.7106 27.7131 31.9744C27.9768 32.2381 28.125 32.5958 28.125 32.9687C28.125 33.3417 27.9768 33.6994 27.7131 33.9631C27.4494 34.2268 27.0917 34.375 26.7188 34.375H1.40625C1.03329 34.375 0.675604 34.2268 0.411881 33.9631C0.148158 33.6994 0 33.3417 0 32.9687Z"
            fill="#184E7F"
          />
          <path
            d="M53.2955 29V5.72727H57.5114V15.5795H68.2955V5.72727H72.5227V29H68.2955V19.1136H57.5114V29H53.2955ZM88.0511 21.6591V11.5455H92.1648V29H88.1761V25.8977H87.9943C87.6004 26.875 86.9527 27.6742 86.0511 28.2955C85.1572 28.9167 84.0549 29.2273 82.7443 29.2273C81.6004 29.2273 80.589 28.9735 79.7102 28.4659C78.839 27.9508 78.1572 27.2045 77.6648 26.2273C77.1723 25.2424 76.9261 24.053 76.9261 22.6591V11.5455H81.0398V22.0227C81.0398 23.1288 81.3428 24.0076 81.9489 24.6591C82.5549 25.3106 83.3504 25.6364 84.3352 25.6364C84.9413 25.6364 85.5284 25.4886 86.0966 25.1932C86.6648 24.8977 87.1307 24.4583 87.4943 23.875C87.8655 23.2841 88.0511 22.5455 88.0511 21.6591ZM96.5767 29V5.72727H100.69V14.4318H100.861C101.073 14.0076 101.372 13.5568 101.759 13.0795C102.145 12.5947 102.668 12.1818 103.327 11.8409C103.986 11.4924 104.827 11.3182 105.849 11.3182C107.198 11.3182 108.414 11.6629 109.497 12.3523C110.588 13.0341 111.452 14.0455 112.088 15.3864C112.732 16.7197 113.054 18.3561 113.054 20.2955C113.054 22.2121 112.74 23.8409 112.111 25.1818C111.482 26.5227 110.626 27.5455 109.543 28.25C108.459 28.9545 107.232 29.3068 105.861 29.3068C104.861 29.3068 104.031 29.1402 103.372 28.8068C102.713 28.4735 102.183 28.072 101.781 27.6023C101.387 27.125 101.08 26.6742 100.861 26.25H100.622V29H96.5767ZM100.611 20.2727C100.611 21.4015 100.77 22.3902 101.088 23.2386C101.414 24.0871 101.88 24.75 102.486 25.2273C103.099 25.697 103.842 25.9318 104.713 25.9318C105.622 25.9318 106.384 25.6894 106.997 25.2045C107.611 24.7121 108.073 24.0417 108.384 23.1932C108.702 22.3371 108.861 21.3636 108.861 20.2727C108.861 19.1894 108.705 18.2273 108.395 17.3864C108.084 16.5455 107.622 15.8864 107.009 15.4091C106.395 14.9318 105.63 14.6932 104.713 14.6932C103.834 14.6932 103.088 14.9242 102.474 15.3864C101.861 15.8485 101.395 16.4962 101.077 17.3295C100.766 18.1629 100.611 19.1439 100.611 20.2727ZM120.665 5.72727V29H116.551V5.72727H120.665ZM127.452 35.5455C126.891 35.5455 126.372 35.5 125.895 35.4091C125.425 35.3258 125.05 35.2273 124.77 35.1136L125.724 31.9091C126.323 32.0833 126.857 32.1667 127.327 32.1591C127.796 32.1515 128.209 32.0038 128.565 31.7159C128.929 31.4356 129.236 30.9659 129.486 30.3068L129.838 29.3636L123.509 11.5455H127.872L131.895 24.7273H132.077L136.111 11.5455H140.486L133.497 31.1136C133.171 32.0379 132.74 32.8295 132.202 33.4886C131.664 34.1553 131.005 34.6629 130.224 35.0114C129.452 35.3674 128.527 35.5455 127.452 35.5455Z"
            fill="#184E7F"
          />
          <path
            d="M573.073 1327.58C573.073 1327.95 572.983 1328.3 572.803 1328.63C572.622 1328.95 572.348 1329.21 571.98 1329.42C571.611 1329.62 571.157 1329.72 570.615 1329.72C570.089 1329.72 569.619 1329.63 569.206 1329.44C568.8 1329.24 568.473 1328.98 568.225 1328.65C567.984 1328.31 567.845 1327.93 567.808 1327.5H568.901C568.924 1327.73 568.999 1327.95 569.127 1328.17C569.262 1328.38 569.45 1328.55 569.691 1328.7C569.939 1328.83 570.236 1328.9 570.581 1328.9C571.033 1328.9 571.378 1328.78 571.619 1328.54C571.859 1328.3 571.98 1327.99 571.98 1327.61C571.98 1327.29 571.893 1327.03 571.72 1326.82C571.555 1326.62 571.348 1326.46 571.1 1326.35C570.852 1326.23 570.514 1326.1 570.085 1325.97C569.582 1325.8 569.176 1325.65 568.868 1325.5C568.567 1325.35 568.307 1325.13 568.089 1324.84C567.879 1324.55 567.774 1324.16 567.774 1323.68C567.774 1323.26 567.871 1322.9 568.067 1322.58C568.27 1322.27 568.556 1322.02 568.924 1321.85C569.3 1321.68 569.74 1321.59 570.243 1321.59C571.025 1321.59 571.645 1321.78 572.104 1322.17C572.562 1322.54 572.829 1323.02 572.904 1323.61H571.799C571.739 1323.29 571.578 1323.02 571.314 1322.78C571.051 1322.53 570.694 1322.41 570.243 1322.41C569.83 1322.41 569.499 1322.52 569.251 1322.74C569.003 1322.95 568.879 1323.25 568.879 1323.64C568.879 1323.95 568.958 1324.2 569.116 1324.4C569.281 1324.59 569.484 1324.74 569.724 1324.85C569.965 1324.96 570.296 1325.08 570.717 1325.21C571.228 1325.38 571.638 1325.53 571.946 1325.68C572.262 1325.84 572.528 1326.06 572.746 1326.37C572.964 1326.67 573.073 1327.08 573.073 1327.58ZM574.273 1321.64C574.273 1321.45 574.337 1321.3 574.465 1321.19C574.592 1321.07 574.761 1321.01 574.972 1321.01C575.182 1321.01 575.352 1321.07 575.479 1321.19C575.607 1321.3 575.671 1321.45 575.671 1321.64C575.671 1321.82 575.607 1321.98 575.479 1322.1C575.352 1322.21 575.182 1322.27 574.972 1322.27C574.761 1322.27 574.592 1322.21 574.465 1322.1C574.337 1321.98 574.273 1321.82 574.273 1321.64ZM575.479 1323.45V1329.64H574.453V1323.45H575.479ZM579.666 1323.37C580.268 1323.37 580.775 1323.52 581.189 1323.82C581.609 1324.12 581.903 1324.53 582.068 1325.03V1323.45H583.094V1329.74C583.094 1330.32 582.974 1330.82 582.733 1331.27C582.493 1331.71 582.154 1332.06 581.718 1332.3C581.282 1332.55 580.775 1332.68 580.196 1332.68C579.362 1332.68 578.681 1332.47 578.155 1332.07C577.629 1331.67 577.294 1331.13 577.152 1330.44H578.167C578.287 1330.86 578.512 1331.18 578.843 1331.41C579.181 1331.65 579.614 1331.77 580.14 1331.77C580.696 1331.77 581.155 1331.59 581.516 1331.23C581.884 1330.88 582.068 1330.38 582.068 1329.74V1328.06C581.903 1328.57 581.609 1328.97 581.189 1329.27C580.775 1329.57 580.268 1329.72 579.666 1329.72C579.117 1329.72 578.629 1329.59 578.2 1329.34C577.772 1329.08 577.434 1328.72 577.185 1328.24C576.945 1327.76 576.825 1327.2 576.825 1326.55C576.825 1325.91 576.945 1325.34 577.185 1324.86C577.434 1324.38 577.772 1324.01 578.2 1323.76C578.629 1323.5 579.117 1323.37 579.666 1323.37ZM579.959 1324.29C579.328 1324.29 578.821 1324.49 578.437 1324.9C578.061 1325.29 577.873 1325.85 577.873 1326.55C577.873 1327.26 578.061 1327.82 578.437 1328.22C578.821 1328.62 579.328 1328.82 579.959 1328.82C580.365 1328.82 580.726 1328.73 581.042 1328.54C581.365 1328.35 581.617 1328.09 581.797 1327.75C581.978 1327.4 582.068 1327 582.068 1326.55C582.068 1326.1 581.978 1325.7 581.797 1325.36C581.617 1325.01 581.365 1324.75 581.042 1324.57C580.726 1324.38 580.365 1324.29 579.959 1324.29ZM587.986 1323.35C588.708 1323.35 589.29 1323.58 589.734 1324.05C590.177 1324.51 590.399 1325.17 590.399 1326.05V1329.64H589.373V1326.14C589.373 1325.52 589.215 1325.05 588.899 1324.71C588.584 1324.38 588.155 1324.22 587.614 1324.22C587.05 1324.22 586.599 1324.4 586.261 1324.77C585.923 1325.13 585.753 1325.66 585.753 1326.36V1329.64H584.727V1323.45H585.753V1324.92C585.911 1324.41 586.189 1324.03 586.588 1323.76C586.994 1323.49 587.46 1323.35 587.986 1323.35ZM594.579 1321.64C594.579 1321.45 594.643 1321.3 594.77 1321.19C594.898 1321.07 595.067 1321.01 595.278 1321.01C595.488 1321.01 595.657 1321.07 595.785 1321.19C595.913 1321.3 595.977 1321.45 595.977 1321.64C595.977 1321.82 595.913 1321.98 595.785 1322.1C595.657 1322.21 595.488 1322.27 595.278 1322.27C595.067 1322.27 594.898 1322.21 594.77 1322.1C594.643 1321.98 594.579 1321.82 594.579 1321.64ZM595.785 1323.45V1329.64H594.759V1323.45H595.785ZM600.694 1323.35C601.415 1323.35 601.998 1323.58 602.441 1324.05C602.885 1324.51 603.107 1325.17 603.107 1326.05V1329.64H602.081V1326.14C602.081 1325.52 601.923 1325.05 601.607 1324.71C601.291 1324.38 600.863 1324.22 600.322 1324.22C599.758 1324.22 599.307 1324.4 598.968 1324.77C598.63 1325.13 598.461 1325.66 598.461 1326.36V1329.64H597.435V1323.45H598.461V1324.92C598.619 1324.41 598.897 1324.03 599.295 1323.76C599.701 1323.49 600.167 1323.35 600.694 1323.35ZM607.286 1321.64C607.286 1321.45 607.35 1321.3 607.478 1321.19C607.606 1321.07 607.775 1321.01 607.985 1321.01C608.196 1321.01 608.365 1321.07 608.493 1321.19C608.621 1321.3 608.684 1321.45 608.684 1321.64C608.684 1321.82 608.621 1321.98 608.493 1322.1C608.365 1322.21 608.196 1322.27 607.985 1322.27C607.775 1322.27 607.606 1322.21 607.478 1322.1C607.35 1321.98 607.286 1321.82 607.286 1321.64ZM608.493 1323.45V1329.64H607.467V1323.45H608.493ZM613.401 1323.35C614.123 1323.35 614.706 1323.58 615.149 1324.05C615.593 1324.51 615.814 1325.17 615.814 1326.05V1329.64H614.788V1326.14C614.788 1325.52 614.63 1325.05 614.315 1324.71C613.999 1324.38 613.57 1324.22 613.029 1324.22C612.465 1324.22 612.014 1324.4 611.676 1324.77C611.338 1325.13 611.169 1325.66 611.169 1326.36V1329.64H610.143V1323.45H611.169V1324.92C611.327 1324.41 611.605 1324.03 612.003 1323.76C612.409 1323.49 612.875 1323.35 613.401 1323.35ZM619.328 1323.37C620.027 1323.37 620.587 1323.56 621.008 1323.93C621.436 1324.29 621.696 1324.78 621.786 1325.39H620.805C620.76 1325.02 620.606 1324.72 620.343 1324.49C620.087 1324.25 619.741 1324.13 619.305 1324.13C618.937 1324.13 618.647 1324.22 618.437 1324.4C618.234 1324.57 618.133 1324.81 618.133 1325.11C618.133 1325.34 618.2 1325.52 618.336 1325.66C618.478 1325.8 618.651 1325.9 618.854 1325.98C619.065 1326.05 619.35 1326.12 619.711 1326.2C620.17 1326.31 620.538 1326.42 620.816 1326.53C621.102 1326.64 621.342 1326.81 621.538 1327.05C621.741 1327.29 621.842 1327.61 621.842 1328.02C621.842 1328.52 621.651 1328.93 621.267 1329.25C620.891 1329.56 620.388 1329.72 619.756 1329.72C619.02 1329.72 618.418 1329.54 617.952 1329.19C617.486 1328.84 617.212 1328.35 617.129 1327.71H618.121C618.159 1328.09 618.32 1328.39 618.606 1328.63C618.899 1328.86 619.283 1328.98 619.756 1328.98C620.11 1328.98 620.384 1328.89 620.579 1328.71C620.782 1328.53 620.884 1328.29 620.884 1328C620.884 1327.76 620.813 1327.56 620.67 1327.42C620.527 1327.28 620.35 1327.17 620.14 1327.09C619.929 1327.02 619.64 1326.94 619.271 1326.86C618.813 1326.75 618.445 1326.65 618.166 1326.54C617.896 1326.44 617.663 1326.27 617.467 1326.05C617.279 1325.81 617.185 1325.5 617.185 1325.11C617.185 1324.59 617.377 1324.17 617.76 1323.86C618.144 1323.53 618.666 1323.37 619.328 1323.37ZM626.168 1328.74V1329.64H625.401C624.77 1329.64 624.296 1329.49 623.98 1329.19C623.672 1328.89 623.518 1328.39 623.518 1327.68V1324.34H622.593V1323.45H623.518V1321.91H624.555V1323.45H626.157V1324.34H624.555V1327.7C624.555 1328.1 624.627 1328.38 624.77 1328.53C624.92 1328.67 625.176 1328.74 625.536 1328.74H626.168ZM633.115 1326.2C633.115 1326.42 633.1 1326.61 633.069 1326.77H628.119C628.142 1327.47 628.341 1328 628.717 1328.36C629.1 1328.71 629.566 1328.89 630.115 1328.89C630.611 1328.89 631.025 1328.76 631.355 1328.51C631.694 1328.26 631.9 1327.92 631.976 1327.5H633.069C632.994 1327.93 632.825 1328.31 632.562 1328.65C632.306 1328.99 631.972 1329.25 631.558 1329.44C631.145 1329.63 630.679 1329.72 630.16 1329.72C629.566 1329.72 629.04 1329.59 628.582 1329.34C628.123 1329.08 627.762 1328.72 627.499 1328.24C627.243 1327.76 627.116 1327.2 627.116 1326.55C627.116 1325.91 627.243 1325.34 627.499 1324.86C627.762 1324.38 628.123 1324.01 628.582 1323.76C629.04 1323.5 629.566 1323.37 630.16 1323.37C630.762 1323.37 631.284 1323.5 631.728 1323.76C632.179 1324.01 632.521 1324.35 632.754 1324.78C632.994 1325.21 633.115 1325.68 633.115 1326.2ZM632.077 1326.27C632.1 1325.81 632.025 1325.43 631.852 1325.12C631.679 1324.81 631.442 1324.58 631.141 1324.43C630.841 1324.28 630.514 1324.21 630.16 1324.21C629.596 1324.21 629.123 1324.38 628.739 1324.74C628.356 1325.08 628.149 1325.59 628.119 1326.27H632.077ZM636.994 1323.37C637.595 1323.37 638.103 1323.52 638.516 1323.82C638.937 1324.12 639.23 1324.53 639.396 1325.03V1323.45H640.422V1329.64H639.396V1328.06C639.23 1328.57 638.937 1328.97 638.516 1329.27C638.103 1329.57 637.595 1329.72 636.994 1329.72C636.445 1329.72 635.956 1329.59 635.528 1329.34C635.099 1329.08 634.761 1328.72 634.513 1328.24C634.272 1327.76 634.152 1327.2 634.152 1326.55C634.152 1325.91 634.272 1325.34 634.513 1324.86C634.761 1324.38 635.099 1324.01 635.528 1323.76C635.956 1323.5 636.445 1323.37 636.994 1323.37ZM637.287 1324.29C636.656 1324.29 636.148 1324.49 635.765 1324.9C635.389 1325.29 635.201 1325.85 635.201 1326.55C635.201 1327.26 635.389 1327.82 635.765 1328.22C636.148 1328.62 636.656 1328.82 637.287 1328.82C637.693 1328.82 638.054 1328.73 638.369 1328.54C638.693 1328.35 638.945 1328.09 639.125 1327.75C639.305 1327.4 639.396 1327 639.396 1326.55C639.396 1326.1 639.305 1325.7 639.125 1325.36C638.945 1325.01 638.693 1324.75 638.369 1324.57C638.054 1324.38 637.693 1324.29 637.287 1324.29ZM644.592 1323.37C645.193 1323.37 645.701 1323.52 646.114 1323.82C646.535 1324.12 646.828 1324.53 646.994 1325.03V1321.3H648.02V1329.64H646.994V1328.06C646.828 1328.57 646.535 1328.97 646.114 1329.27C645.701 1329.57 645.193 1329.72 644.592 1329.72C644.043 1329.72 643.555 1329.59 643.126 1329.34C642.698 1329.08 642.359 1328.72 642.111 1328.24C641.871 1327.76 641.75 1327.2 641.75 1326.55C641.75 1325.91 641.871 1325.34 642.111 1324.86C642.359 1324.38 642.698 1324.01 643.126 1323.76C643.555 1323.5 644.043 1323.37 644.592 1323.37ZM644.885 1324.29C644.254 1324.29 643.746 1324.49 643.363 1324.9C642.987 1325.29 642.799 1325.85 642.799 1326.55C642.799 1327.26 642.987 1327.82 643.363 1328.22C643.746 1328.62 644.254 1328.82 644.885 1328.82C645.291 1328.82 645.652 1328.73 645.968 1328.54C646.291 1328.35 646.543 1328.09 646.723 1327.75C646.904 1327.4 646.994 1327 646.994 1326.55C646.994 1326.1 646.904 1325.7 646.723 1325.36C646.543 1325.01 646.291 1324.75 645.968 1324.57C645.652 1324.38 645.291 1324.29 644.885 1324.29Z"
            fill="#4831D4"
          />
          <path
            d="M567.221 1330.77H648.832V1331.33H567.221V1330.77Z"
            fill="#4831D4"
          />
        </svg>
      </div>
      <div className={styles.formContainer}>
        <div className={styles.formHeader}>
          <p>Create an account</p>
          <Link to="/login" className={styles.gotoLogin}>
            Sign in instead
          </Link>
        </div>
        <form className={styles.form} onSubmit={handleSubmit}>
          <label htmlFor="firstName" className={styles.label}>
            First Name
          </label>
          <input
            type="text"
            name="firstName"
            className={styles.input}
            value={formData.firstName}
            onChange={handleChange}
            required
          />
          {errors.firstName && (
            <p className={styles.error}>{errors.firstName}</p>
          )}

          <label htmlFor="lastName" className={styles.label}>
            Last Name
          </label>
          <input
            type="text"
            name="lastName"
            className={styles.input}
            value={formData.lastName}
            onChange={handleChange}
            required
          />
          {errors.lastName && <p className={styles.error}>{errors.lastName}</p>}

          <label htmlFor="email" className={styles.label}>
            Email
          </label>
          <input
            type="email"
            name="email"
            className={styles.input}
            value={formData.email}
            onChange={handleChange}
            required
          />
          {errors.email && <p className={styles.error}>{errors.email}</p>}

          <label htmlFor="password" className={styles.label}>
            Password
          </label>
          <div className={styles.passwordWrapper}>
            <input
              type={showPassword ? "text" : "password"}
              name="password"
              className={styles.input}
              value={formData.password}
              onChange={handleChange}
              required
            />
            <button
              type="button"
              className={styles.eyeButton}
              onClick={togglePasswordVisibility}
              aria-label={showPassword ? "Hide password" : "Show password"}
            >
              {/* {showPassword ? '👁️‍🗨️' : '👁️'} */}
            </button>
          </div>
          {errors.password && <p className={styles.error}>{errors.password}</p>}

          <label htmlFor="confirmPassword" className={styles.label}>
            Confirm Password
          </label>
          <div className={styles.passwordWrapper}>
            <input
              type={showConfirmPassword ? "text" : "password"}
              name="confirmPassword"
              className={styles.input}
              value={formData.confirmPassword}
              onChange={handleChange}
              required
            />
            <button
              type="button"
              className={styles.eyeButton}
              onClick={toggleConfirmPasswordVisibility}
              aria-label={
                showConfirmPassword ? "Hide password" : "Show password"
              }
            >
              {/* {showConfirmPassword ? '👁️‍🗨️' : '👁️'} */}
            </button>
          </div>
          {errors.confirmPassword && (
            <p className={styles.error}>{errors.confirmPassword}</p>
          )}

          <div className={styles.terms}>
            <input type="checkbox" id="terms" required />
            <label htmlFor="terms">
              By creating an account I agree to our <a href="#">Terms of use</a>{" "}
              and <a href="#">Privacy Policy</a>
            </label>
          </div>
          <button className={`${styles.btn} ${styles.signup}`} type="submit">
            {loading ? "Creating account..." : "Create an account"}
          </button>
          {errors.server && <p className={styles.error}>{errors.server}</p>}
        </form>
        <p className={styles.recaptcha}>
          This site is protected by reCAPTCHA and the{" "}
          <a href="#">Google Privacy Policy</a> and{" "}
          <a href="#">Terms of Service</a> apply.
        </p>
      </div>
      <div className={styles.imageContainer}>
        <img src={authImg} alt="auth image bg" />
      </div>
    </div>
  );
}

export default Signup;
